<MudText Class="mt-4" Typo="Typo.body2">
    Advance payments are pre-financed subsidies provided to farmers before the commencement of a project or investment. These payments help farmers cover initial costs and expenses associated with their agricultural activities. The advance payment is typically a percentage of the total subsidy amount and is disbursed based on the approved project plan and budget.
</MudText>

<MudText Class="mt-2" Typo="Typo.body2">
    Conditions:
    <ul>
        <li>Own contribution of at least 10%.</li>
        <li>Viable investment project.</li>
        <li>Project duration max. 24 months.</li>
    </ul>
</MudText>

<UploadDocument Title="Declaration on own responsibility"
                ButtonText="Upload Declaration"
                FilesChanged="OnDeclarationUploaded" />

@if (_uploadedFiles.ContainsKey("Declaration"))
{
    <MudText Typo="Typo.caption" Color="Color.Success">
        ✅ @(_uploadedFiles["Declaration"].Name) uploaded successfully
    </MudText>
}

<UploadDocument Title="Farm registration certificate / registry extract"
                ButtonText="Upload Certificate"
                FilesChanged="OnCertificateUploaded" />

@if (_uploadedFiles.ContainsKey("Certificate"))
{
    <MudText Typo="Typo.caption" Color="Color.Success">
        ✅ @(_uploadedFiles["Certificate"].Name) uploaded successfully
    </MudText>
}

<UploadDocument Title="Proof of land rights (property, lease, or use certificate)"
                ButtonText="Upload Proof"
                FilesChanged="OnProofUploaded" />

@if (_uploadedFiles.ContainsKey("Proof"))
{
    <MudText Typo="Typo.caption" Color="Color.Success">
        ✅ @(_uploadedFiles["Proof"].Name) uploaded successfully
    </MudText>
}

<UploadDocument Title="Project plan / technical design + budget"
                ButtonText="Upload Project Plan"
                FilesChanged="OnProjectPlanUploaded" />

@if (_uploadedFiles.ContainsKey("ProjectPlan"))
{
    <MudText Typo="Typo.caption" Color="Color.Success">
        ✅ @(_uploadedFiles["ProjectPlan"].Name) uploaded successfully
    </MudText>
}

<UploadDocument Title="Bank guarantee or performance commitment (optional)"
                ButtonText="Upload Bank Guarantee"
                FilesChanged="OnBankGuaranteeUploaded" />

@if (_uploadedFiles.ContainsKey("BankGuarantee"))
{
    <MudText Typo="Typo.caption" Color="Color.Success">
        ✅ @(_uploadedFiles["BankGuarantee"].Name) uploaded successfully
    </MudText>
}

<hr style="margin-block: 2rem;" />

<div class="w-100 d-flex justify-content-end mt-4">
    <MudButton StartIcon="@Icons.Material.Filled.AutoAwesome"
               Color="Color.Primary"
               Variant="Variant.Filled"
               Disabled="@_applicationGenerated"
               OnClick="GenerateApplication">
        @(_applicationGenerated ? "Application Generated" : "Generate Application")
    </MudButton>
</div>

@if (_applicationGenerated)
{
    <MudText Class="mt-4" Typo="Typo.body1" Color="Color.Success">
        ✅ Your application has been generated successfully!
    </MudText>
}

@code {
    private Dictionary<string, IBrowserFile> _uploadedFiles = new();
    private bool _applicationGenerated = false;

    private void OnDeclarationUploaded(IBrowserFile file) => UploadFiles(file, "Declaration");
    private void OnCertificateUploaded(IBrowserFile file) => UploadFiles(file, "Certificate");
    private void OnProofUploaded(IBrowserFile file) => UploadFiles(file, "Proof");
    private void OnProjectPlanUploaded(IBrowserFile file) => UploadFiles(file, "ProjectPlan");
    private void OnBankGuaranteeUploaded(IBrowserFile file) => UploadFiles(file, "BankGuarantee");

    private void UploadFiles(IBrowserFile file, string key)
    {
        _uploadedFiles[key] = file;
        // TODO: Upload to the server here
    }

    private void GenerateApplication()
    {
        // TODO: Generate application logic here
        _applicationGenerated = true;
    }
}

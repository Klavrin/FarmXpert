@* @implements IDisposable *@

@inject NavigationManager NavigationManager

<MudDrawer 
    id="nav-drawer" 
    @bind-Open="_open" 
    Elevation="1" 
    Variant="DrawerVariant.Responsive" 
    Breakpoint="Breakpoint.Md" 
    OverlayAutoClose="true">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">FarmXpert</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Match="NavLinkMatch.All" Href="/">Home</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="/counter">Counter</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="/todos">Todos</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="/weather">Weather</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="/auth">Auth Required</MudNavLink>
        <AuthorizeView>
            <Authorized>
                <MudNavLink Match="NavLinkMatch.All" Href="/Account/Manage">@context.User.Identity?.Name</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/Account/Logout">Logout</MudNavLink>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Match="NavLinkMatch.All" Href="/Account/Register">Register</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/Account/Login">Login</MudNavLink>
            </NotAuthorized>
        </AuthorizeView>
    </MudNavMenu>    
</MudDrawer>

@code {
    private bool _open = true;
    
    public void ToggleDrawer()
    {
        _open = !_open;
        Console.WriteLine($"Drawer toggled: {_open}");
    }
    
    // private string? currentUrl;
    //
    // protected override void OnInitialized()
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    //     NavigationManager.LocationChanged += OnLocationChanged;
    // }
    //
    // private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    //     StateHasChanged();
    // }
    //
    // public void Dispose()
    // {
    //     NavigationManager.LocationChanged -= OnLocationChanged;
    // }
}